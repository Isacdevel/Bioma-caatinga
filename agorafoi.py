# -*- coding: utf-8 -*-
"""agorafoi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K56ofoAHerie53u1uLGor8SLPn43ZCiJ

Utilizaremos a Tabela a seguir com números em Hectares das classes  de áreas superficiais do bioma caatinga;

Link da tabela 1 (tabelacaatinga) que está armazenada no drive = https://drive.google.com/file/d/1lO0ueniH-epARcokm7WkC_gjeH8CJiwA/view?usp=sharing
"""

import pandas as pd
df=pd.read_csv("https://drive.google.com/u/3/uc?id=1lO0ueniH-epARcokm7WkC_gjeH8CJiwA&export=download", sep = ";", encoding='latin1' )
df

"""tabela invertida ( classes de áreas na horizontal)

https://drive.google.com/file/d/16bMWQkI1-MPA8LOe7Rb6evqf1fTvaULM/view?usp=sharing = pasta = areas2


"""

import pandas as pd
df=pd.read_csv("https://drive.google.com/u/3/uc?id=16bMWQkI1-MPA8LOe7Rb6evqf1fTvaULM&export=download", sep = ";", encoding='latin1' )
df

"""observação: tabela 3 :>> classes gerais na horizontal
https://drive.google.com/file/d/15TLbhJf6rleGUMoljMazQfGNByjbpO50/view?usp=sharing
"""

import pandas as pd
df=pd.read_csv("https://drive.google.com/u/3/uc?id=15TLbhJf6rleGUMoljMazQfGNByjbpO50&export=download", sep = ";", encoding='latin1' )
df

"""Observação: tabela 4 > classes gerais na vertical : https://drive.google.com/file/d/1VKnfCHaKFJ6YXuetIq3OgFol8mxxPU6g/view?usp=sharing"""

df=pd.read_csv("https://drive.google.com/u/3/uc?id=1VKnfCHaKFJ6YXuetIq3OgFol8mxxPU6g&export=download", sep = ";", encoding='latin1' )
df

"""#Laços de várias ferramentas e entrada de comandos."""

import pandas as pd
df=pd.read_csv("https://drive.google.com/u/3/uc?id=15TLbhJf6rleGUMoljMazQfGNByjbpO50&export=download", sep = ";", encoding='latin1' )
df

# Commented out IPython magic to ensure Python compatibility.
print("Qual ferramenta vc quer verificar ? ")
a = input()
x = input("Digite a variável ")
while a == "Histograma":
  if x ==  'Floresta':
    df.hist(column="Floresta", bins=5)
    break
  if x == 'Formação Natural Não Florestal':
    df.hist(column="Formação Natural Não Florestal", bins=5)
    break
  if x == 'Agropecuário':
    df.hist(column="Agropecuário", bins=5)
    break
  if x == 'Área Não Vegetada':
    df.hist(column="Área Não Vegetada", bins=5)
    break
  else:
    df.hist(column="Água", bins=5)
    break
while a == "Gráfico Regressão Linear":
  import pandas as pd
  import numpy as np
  import matplotlib.pyplot as plt
#   %matplotlib inline
  print("Para saber a relação entre uma variável durante os 35 anos e fazer um gráfico de dispersão escolha a coluna:")
  col1 = input("Para fazer o gráfico de dispersão inclua a primeira coluna: ")
  col2 = 'Ano'
  escolha=(col1, col2)
  print(escolha)
  s = df[col1]
  v = df[col2]
  plt.plot(v, s,'.')
  plt.grid()
  plt.xlabel(col2)
  plt.ylabel(col1)
  break
while a == "soma":
  o = input("Digite a variável :")
  break
  if o == "Floresta":
    df["Floresta"].max() -df["Floresta"].min()

"""#Para Gráfico de dispersão;

"""

# Commented out IPython magic to ensure Python compatibility.
print("Qual tipo de dado você quer ?")
h = input()
x
if h == 'Gráfico':
  import pandas as pd
  import numpy as np
  import matplotlib.pyplot as plt
#   %matplotlib inline
  print("Para saber a relação entre uma variável durante os 35 anos e fazer um gráfico de dispersão escolha a coluna:")
  col1 = input("Para fazer o gráfico de dispersão inclua a primeira coluna: ")
  col2 = 'Ano'
  escolha=(col1, col2)
  print(escolha)
  s = df[col1]
  v = df[col2]
  plt.plot(v, s,'.')
  plt.grid()
  plt.xlabel(col2)
  plt.ylabel(col1)

"""#ordenar em ordem crescente"""

import pandas as pd
c = input("Escolha a classe de área para ordenar de forma crescente: ")
df=pd.read_csv("https://drive.google.com/u/3/uc?id=15TLbhJf6rleGUMoljMazQfGNByjbpO50&export=download", sep = ";", encoding='latin1' )
if c == 'Floresta':
  df.sort_values(by="Floresta")
if c == 'Formação Natural Não Florestal':
  df.sort_values(by="Formação Natural Não Florestal")
if c == 'Agropecuário':
  df.sort_values(by="Agropecuário")
if c == 'Área Não Vegetada':
  df.sort_values(by="Área Não Vegetada")
else:
  df.sort_values(by="Água")

"""#índice de correlação:

"""

import pandas as pd
df=pd.read_csv("https://drive.google.com/u/3/uc?id=15TLbhJf6rleGUMoljMazQfGNByjbpO50&export=download", sep = ";", encoding='latin1' )
df

a = df["Ano"].corr(df["Floresta"])
b = df["Ano"].corr(df["Formação Natural Não Florestal"])
c = df["Ano"].corr(df["Agropecuário"])
d = df["Ano"].corr(df["Área Não Vegetada"])
e = df["Ano"].corr(df["Água"])
print("Coeficiente de correlação entre Ano e Floresta: %.3f, entre Ano e Formação Natural Não Florestal: %.3f,  entre Ano e Agropecuário: %.3f, entre Ano e Área Não Vegetada: %.3f, entre Ano e Água: %.3f, " %(a, b, c, d, e,))

"""#Código completo para finalizar o trabalho"""

# Commented out IPython magic to ensure Python compatibility.
print("Qual ferramenta você quer utilizar para verificar os dados da tabela: ")
print("Gráfico Histograma, Gráfico de dispersão,")
print("Soma, amplitude, imprimirumacoluna,")
print("ordenar de forma crescente, cálculo de variância,")
print("cálculo de desvio padrão ou índice de correlação? ")
a = input()
x = input("Digite a variável ou coluna da tabela a ser analisada: ")
while a == "gráfico histograma":
  import pandas as pd
  import numpy as np
  import matplotlib.pyplot as plt
#   %matplotlib inline
  df=pd.read_csv("https://drive.google.com/u/3/uc?id=15TLbhJf6rleGUMoljMazQfGNByjbpO50&export=download", sep = ";", encoding='latin1' )
  if x ==  'Floresta':
    df.hist(column="Floresta", bins=5)
    break
  if x == 'Formação Natural Não Florestal':
    df.hist(column="Formação Natural Não Florestal", bins=5)
    break
  if x == 'Agropecuário':
    df.hist(column="Agropecuário", bins=5)
    break
  if x == 'Área Não Vegetada':
    df.hist(column="Área Não Vegetada", bins=5)
    break
  else:
    df.hist(column="Água", bins=5)
    break
while a == "gráfico de dispersão":
  import pandas as pd
  import numpy as np
  import matplotlib.pyplot as plt
#   %matplotlib inline
  df=pd.read_csv("https://drive.google.com/u/3/uc?id=15TLbhJf6rleGUMoljMazQfGNByjbpO50&export=download", sep = ";", encoding='latin1' )
  col1 = (x)
  col2 = 'Ano'
  escolha=(col1, col2)
  print(escolha)
  s = df[col1]
  v = df[col2]
  plt.plot(v, s,'.')
  plt.grid()
  plt.xlabel(col2)
  plt.ylabel(col1)
  break
while a == "soma":
  df=pd.read_csv("https://drive.google.com/u/3/uc?id=1VKnfCHaKFJ6YXuetIq3OgFol8mxxPU6g&export=download", sep = ";", encoding='latin1' )
  df[x].sum()
  print(df[x].sum())
  break
while a == "amplitude":
  import pandas as pd
  df=pd.read_csv("https://drive.google.com/u/3/uc?id=16bMWQkI1-MPA8LOe7Rb6evqf1fTvaULM&export=download", sep = ";", encoding='latin1' )
  if x == "Floresta":
    #completar as variaveis e prints corretamente
    print(df["Floresta"].max() - df["Floresta"].min())
    print("Esse é o valor em hectares de floresta desmatadas ou extintas durante os 35 anos estudados!")
    break
  if x == "Formação Natural Não Florestal":
    print(df["Formação Natural Não Florestal"].max() -df["Formação Natural Não Florestal"].min())
    break
  if x == "Agropecuário":
    print(df["Agropecuário"].max() -df["Agropecuário"].min())
    break
  if x == "Área Não Vegetada":
    print(df["Área Não Vegetada"].max() -df["Área Não Vegetada"].min())
    break
  if x == "Água":
    print(df["Água"].max() -df["Água"].min())
    break
while a == 'Imprimir uma coluna':
  print(df[[x]])
  break
while a == 'ordenar de forma crescente':
  import pandas as pd
  df=pd.read_csv("https://drive.google.com/u/3/uc?id=15TLbhJf6rleGUMoljMazQfGNByjbpO50&export=download", sep = ";", encoding='latin1' )
  if x == 'Floresta':
    print(df.sort_values(by="Floresta"))
    break
  if x == 'Formação Natural Não Florestal':
    print(df.sort_values(by="Formação Natural Não Florestal"))
    break
  if x == 'Agropecuário':
    print(df.sort_values(by="Agropecuário"))
    break
  if x == 'Área Não Vegetada':
    print(df.sort_values(by="Área Não Vegetada"))
    break
  else:
    print(df.sort_values(by="Água"))
    break
while a == 'cálculo de variância':
    print("A Variância do conjunto de dados da coluna", x, "é: ", df[x].var())
    break
while a == 'cálculo de desvio padrão':
  print("O valor de Desvio Padrão do conjunto de dados da coluna", x, "é: ", df[x].std())
  break
while a == 'índice de correlação':
  if x == 'Floresta':
    print(df["Ano"].corr(df["Floresta"]))
    break
  if x == 'Formação Natural Não Florestal':
    print(df["Ano"].corr(df["Formação Natural Não Florestal"]))
    break
  if x == 'Agropecuário':
    print(df["Ano"].corr(df["Agropecuário"]))
    break
  if x == 'Área Não Vegetada':
    print(df["Ano"].corr(df["Área Não Vegetada"]))
    break
  if x == 'Água':
    print(df["Ano"].corr(df["Água"]))
    break
  print("Coeficiente de correlação entre Ano e Floresta: %.3f, entre Ano e Formação Natural Não Florestal: %.3f,  entre Ano e Agropecuário: %.3f, entre Ano e Área Não Vegetada: %.3f, entre Ano e Água: %.3f, " %(n, b, c, d, e,))
  break
while a != "Histograma" and a != "Gráfico Regressão Linear" and a!= "soma" and a!= "amplitude" and a != "Imprimir uma coluna" and a != "ordenar de forma crescente" and a != "cálculo de variância" and a != "cálculo de desvio padrão" and a != "índice de correlação":
  print("Escreva corretamente para executar o programa!")
  break